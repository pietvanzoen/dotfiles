[include]
  # Import environment specific config and sensitive data.
  path = ~/.config/git/config.local

[user]
  name = pietvanzoen
  email = hi@pietvanzoen.com
  username = pietvanzoen
  signingkey = 119BA45BFDF0E612

[commit]
  gpgsign = true

[gpg]
  program = gpgx

[github]
  user = pietvanzoen

[core]
  excludesfile = ~/.config/git/ignore_global

  # Use less when output is longer than screen. Also leave result on screen after exiting less.
  pager = diff-highlight | less -F -X

[init]
  templatedir = ~/.config/git/template

[alias]
  ###############################################
  # LOGGING
  ###############################################

  # Pretty logging.
  l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset %C(cyan)$%G?%Creset' --abbrev-commit
  ln = l --no-merges

  lb = !git l origin/master..$(git symbolic-ref --short HEAD) # Log commits that diverge from origin/master.
  lt = !git l $(git latest-tag-version)..HEAD
  la = !git l --all # Log with all refs.
  r = !git l -12 # Log recent commits.
  ra = !git r --all # Log recent commits from all refs.
  rn = r --no-merges

  # Create a simple change log for copy/pasting into PRs.
  changelog = "!git log --pretty=\"* %ad - %s [%h]\" --date=short"
  changelog-tag = "!git changelog $(git latest-tag-version)..origin/master"
  changelog-branch = !git changelog origin/master..HEAD

  # get last tag
  latest-tag-version = "!git tag --list --sort='-*authordate' 'v*' | head -n 1"


  ###############################################
  # COMMITING
  ###############################################

  st = status -s # Short status.
  ci = commit --verbose # Verbose commit. Shows diff in commit message editor.
  roll-back-one = reset HEAD~1 # Roll back one commit.
  co = checkout
  di = diff
  dc = diff --cached
  amend = commit --amend
  pushf = push --force-with-lease
  aa = add --all
  ff = merge --ff-only
  pullff = pull --ff-only
  noff = merge --no-ff
  fa = fetch --all
  b = branch -lvv # Verbose branch list. Shows upstream branches.
  ds = diff --stat=160,120
  dh1 = diff HEAD~1

  ###############################################
  # BRANCH MANAGEMENT
  ###############################################

  # Create pull request and open url: https://hub.github.com/
  review = "!git push -u && hub pull-request -o"

  fr = fetch-rebase
  frm = !git fetch-rebase master
  diff-commits = "!git fetch origin master:master && git l master --not $(git symbolic-ref --short HEAD)"

  # Run `yarn test` on each commit that diverges from master.
  test-branch="!run-command-on-git-revisions origin/master $(git symbolic-ref --short HEAD) 'yarn test'"

  # Fast-forward merge commits of current branch into master and push. Tidy after.
  finish-branch="!git-finish-branch $1"


  ###############################################
  # OTHER HELPERS
  ###############################################

  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"

[merge]
  summary = true # Always include a summary in merge commits.

[push]
  # Default push to update current branch on remote. Then you don't need to type out upstream
  # name when creating a new upstream branch. e.g. To push a new branch to remote just do `git push -u`
  default = current

[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f

[difftool]
  prompt = false

[mergetool]
  prompt = false

[diff]
  compactionHeuristic = 1
  tool = vimdiff

[difftool]
  prompt = false

[mergetool]
  prompt = false

[pager]
  # Use diff-highlight from git-core for diffing. Better diffing. hello!
  log =  diff-highlight | less --tabs=4 -FX
  show = diff-highlight | less --tabs=4 -FX
  diff = diff-highlight | less --tabs=4 -FX

[color "diff"]
  commit = green
  meta = yellow
  frag = cyan
  old = red
  new = green
  whitespace = red reverse

[color "diff-highlight"]
  oldNormal = red
  oldHighlight = red 52
  newNormal = green
  newHighlight = green 22

[interactive]
	diffFilter = diff-highlight | less --tabs=4 -FX

[fetch]
  prune = true # Always prune refs when fetching.

[pull]
  rebase = true # Always rebase when pulling

[help]
  autocorrect = 20 # After misspelling git command, use closest match after 2s.

[tag]
  sort = -*authordate
