[include]
  # Import environment specific config and sensitive data.
  path = ~/.gitconfig.local

[user]
  name = pietvanzoen
  email = hi@pietvanzoen.com
  username = pietvanzoen
  signingkey = 119BA45BFDF0E612

[gpg]
  program = gpgx

[github]
  user = pietvanzoen

[core]
  excludesfile = ~/.gitignore_global

  # Use less when output is longer than screen. Also leave result on screen after exiting less.
  # pager = diff-highlight | less -F -X
  pager = delta

[init]
  templatedir = ~/.gittemplate

[alias]
  ###############################################
  # LOGGING
  ###############################################

  # Pretty logging.
  ll = log --graph --topo-order --pretty=format:'%C(green)%h%Creset%C(red)%d%Creset %s %C(cyan)(%cr) %C(blue)<%an>%Creset %C(black)%G?%Creset' --abbrev-commit
  l = log --graph --oneline --topo-order
  ln = l --no-merges

  lb = !git l origin/$(git trunk)..$(git symbolic-ref --short HEAD) # Log commits that diverge from origin/<trunk>.
  lt = !git l $(git latest-tag-version)..HEAD
  la = !git l --all # Log with all refs.
  r = !git l -12 # Log recent commits.
  ra = !git r --all # Log recent commits from all refs.
  rn = r --no-merges
  rl = !git ll -12

  # Create a simple change log for copy/pasting into PRs.
  changelog = "!git log --pretty=\"* %ad - %s [%h]\" --date=short"
  changelog-tag = "!git changelog $(git latest-tag-version)..origin/$(git trunk)"
  changelog-branch = !git changelog origin/$(git trunk)..HEAD

  # get last tag
  latest-tag-version = "!git tag --list --sort='-*authordate' 'v*' | head -n 1"


  ###############################################
  # COMMITING
  ###############################################

  st = status -s # Short status.
  ci = commit --verbose # Verbose commit. Shows diff in commit message editor.
  roll-back-one = reset HEAD~1 # Roll back one commit.
  co = checkout
  di = diff
  dc = diff --cached
  amend = commit --amend
  pushf = push --force-with-lease
  aa = add --all
  b = branch -vv # Verbose branch list. Shows upstream branches.
  ds = diff --stat=160,120
  unmerged = diff --name-only --diff-filter=U
  edit-unmerged = "!vim `git diff --name-only --diff-filter=U`"

  ###############################################
  # BRANCH MANAGEMENT
  ###############################################

  # get the name of the default branch
  trunk="!git branch -r --points-at refs/remotes/origin/HEAD | grep '\\->' | cut -d' ' -f5 | sed 's/origin\\///'"
  set-trunk="!f() { git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/$1; }; f"
  cot="!git checkout $(git trunk)"

  # Create pull request and open url: https://hub.github.com/
  review = "!hub pull-request -o"

  fr = fetch-rebase
  frt = "!git fetch-rebase \"$(git trunk)\""
  diff-commits = "!git l $(git trunk) --not $(git symbolic-ref --short HEAD)"

  # Run `yarn test` on each commit that diverges from trunk branch.
  test-branch="!run-command-on-git-revisions origin/$(git trunk) $(git symbolic-ref --short HEAD) 'yarn test'"


  ###############################################
  # OTHER HELPERS
  ###############################################

  new = "!git init && git symbolic-ref HEAD refs/heads/main"
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  ctags ="!.git/hooks/ctags"

  # clean is destructive, use trash instead
  trash = "!git ls-files --others --exclude-standard | xargs -r trash -v"

  ctag-files = ls-files -cdm

[merge]
  summary = true # Always include a summary in merge commits.

[push]
  # Default push to update current branch on remote. Then you don't need to type out upstream
  # name when creating a new upstream branch. e.g. To push a new branch to remote just do `git push -u`
  default = current

[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f

[difftool]
  prompt = false

[mergetool]
  prompt = false

[diff]
  compactionHeuristic = 1
  # tool = vimdiff
  colorMoved = default

[difftool]
  prompt = false

[mergetool]
  prompt = false

#[pager]
  # Use diff-highlight from git-core for diffing. Better diffing. hello!
  # log =  diff-highlight | less --tabs=4 -FX
  # show = diff-highlight | less --tabs=4 -FX
  # diff = diff-highlight | less --tabs=4 -FX

[color "diff"]
  commit = green
  meta = yellow
  frag = cyan
  old = red
  new = green
  whitespace = red reverse

[color "diff-highlight"]
  oldNormal = red
  oldHighlight = red 52
  newNormal = green
  newHighlight = green 22

[interactive]
  diffFilter = delta --color-only

[delta]
  features = unobtrusive-line-numbers decorations
  syntax-theme = Solarized (dark)

[delta "unobtrusive-line-numbers"]
    line-numbers = true
    ; line-numbers-minus-style = "#444444"
    ; line-numbers-zero-style = "#444444"
    ; line-numbers-plus-style = "#444444"
    line-numbers-left-format = "{nm:>4}┊"
    line-numbers-right-format = "{np:>4}│"
    line-numbers-left-style = white dim
    line-numbers-right-style = white dim

[delta "decorations"]
  commit-decoration-style = bold yellow box ul
  file-style = bold yellow ul
  file-decoration-style = none

[fetch]
  prune = true # Always prune refs when fetching.

[pull]
  rebase = true # Always rebase when pulling

[help]
  autocorrect = 20 # After misspelling git command, use closest match after 2s.

[tag]
  sort = -*authordate

[commit]
  template = /Users/piet/.local/etc/git-commit-message.txt

[credential]
  helper = osxkeychain
