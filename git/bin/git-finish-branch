#!/bin/bash

set -e

function main() {
  local branch
  local merge_branch

  branch=$(git symbolic-ref --short HEAD)
  target_branch="${1:-master}"

  assert_not_current

  update_target

  assert_feature_up_to_date

  confirm_merge

  merge_feature

  cleanup

}

function assert_not_current() {
  if [[ $branch == $target_branch ]]; then
    _error "Current branch is $target_branch."
    exit 1
  fi
}

function update_target() {
  _info "updating $target_branch"
  git checkout $target_branch --quiet
  git pull
}

function confirm_merge() {
  echo -n "==> Are you sure you want to merge '$branch' into '$target_branch'? (y/n) "
  read -n 1 confirm
  if [ "$confirm" = "y" ]; then
    return
  else
    _info "Canceling merge"
    exit
  fi
}

function assert_feature_up_to_date() {
  local missing_commits
  missing_commits="$(git log $target_branch --pretty="* %h - %s [%an]" --not "$branch")"

  if [[ $missing_commits ]]; then
    _error "Branch $branch is missing the following commits from $target_branch. Rebase and try again."
    echo "$missing_commits"
    git checkout "$branch" --quiet
    exit 1
  fi

}

function merge_feature() {
  _info "merging $branch"
  git merge --ff-only "$branch"
  git push
}

function cleanup() {
  _info "cleaning up"
  git branch -d "$branch"
  git push origin --delete "$branch"
}

function _info() {
  echo "==> $1"
}

function _error() {
  echo "Error: $1"
}

main $1
