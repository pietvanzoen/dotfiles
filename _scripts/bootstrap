#!/usr/bin/env bash

set -e
SCRIPTS_DIR="$(dirname $0)"

FAILED=()
attempt_script() {
  _info "$1"
  if ! $SCRIPTS_DIR/$1; then
    _error "$1 failed"
    FAILED+=($1)
  fi
}

if [[ -n "$SUDO_USER" ]]; then
  export USER="$SUDO_USER"
  export HOME="/home/$SUDO_USER"
fi

source $SCRIPTS_DIR/_helpers.sh

echo "==> creating directories"
mkdir -vp $HOME/repos

if is_executable apt-get; then
  if _confirm "Run linux install scripts?"; then
    $SCRIPTS_DIR/install-linux
  fi
elif [[ "$OSTYPE" == "darwin"* ]]; then
  if _confirm "Run MacOS install scripts?"; then
    $SCRIPTS_DIR/install-macos
  fi
fi

if [[ ! -d $HOME/.autojump ]]; then
  attempt_script "install-autojump"
fi

if [[ ! -d $HOME/.zplug ]]; then
  attempt_script "install-zplug"
fi

if [[ ! -d $HOME/.fzf ]]; then
  attempt_script "install-fzf"
fi

if [[ ! -e $HOME/.local/bin/git-get ]]; then
  attempt_script "install-git-get"
fi

if [[ ! -d $HOME/.hint ]]; then
  attempt_script "install-hint"
fi

if _confirm "Install dotfiles dev dependencies?"; then
  attempt_script "install-dev"
fi

if [[ ! -d $HOME/.rvm ]]; then
  if _confirm "Install rvm?"; then
    attempt_script "install-rvm"
  fi
fi

if [[ ! -d $HOME/.nvm ]]; then
  if _confirm "Install nvm?"; then
    attempt_script "install-nvm"
  fi
fi

if [[ "$(hostname)" == "finn" ]]; then
  attempt_script "install-pgp-key"
fi

if [[ -n "$(which zsh)" ]]; then
  if [[ "$SHELL" != "$(which zsh)" ]]; then
    if _confirm "Set $(which zsh) as login shell?"; then
      chsh -s "$(which zsh)" "$USER"
    fi
  fi
else
  echo "Error: zsh is not installed. Skipping updating shell."
fi

echo "==> Bootstrapping finished"

if [[ -n "$FAILED" ]]; then
  _error "The following install scripts failed to complete:"
  for fail in ${FAILED[*]}; do
    _error "- $fail"
  done
fi
